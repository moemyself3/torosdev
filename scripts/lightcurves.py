""" This set of functions is primarily used for photometery."""
from config import Configuration
from libraries.utils import Utils
from libraries.photometry import Photometry
import os
import warnings
warnings.filterwarnings("ignore", category=RuntimeWarning)
warnings.filterwarnings("ignore", category=Warning)
import matplotlib
matplotlib.use('TkAgg')


class Lightcurves:

    @staticmethod
    def generate_flux_files(star_list):
        """ This function will generate light curves for all of the stars in a given star list.

        :parameter star_list - The star list generated byt he master frame

        :return Nothing is returned, but light curve files are generated for all stars
        """

        # get the image list to difference
        files = Utils.get_file_list(Configuration.DIFFERENCED_DIRECTORY + "/" + Configuration.DATE + "/" + Configuration.FIELD + "/",
                                    Configuration.FILE_EXTENSION)

        # begin the algorithm to produce the photometry
        for idx, file in enumerate(files):

            fin_nme = file.split('.fits')[0] + '.flux'

            if os.path.isfile(Configuration.DIFFERENCED_DIRECTORY + "/" + Configuration.DATE + "/" + Configuration.FIELD + "/" + fin_nme) == 1:
                Utils.log("Flux file " + fin_nme + " found. Skipping...", "info")

            # check to see if the differenced file already exists
            if os.path.isfile(Configuration.DIFFERENCED_DIRECTORY + "/" + Configuration.DATE + "/" + Configuration.FIELD + "/" + fin_nme) == 0:
                Utils.log("Working to extract flux from " + file + ".", "info")
                Photometry.single_frame_aperture_photometry(star_list,
                                                            Configuration.DIFFERENCED_DIRECTORY + "/" + Configuration.DATE + "/" + Configuration.FIELD + "/" + file,
                                                            Configuration.DIFFERENCED_DIRECTORY + "/" + Configuration.DATE + "/" + Configuration.FIELD + "/" + fin_nme)

        Utils.log("Differencing complete for " + Configuration.FIELD + ".", "info")

    @staticmethod
    def mk_raw_lightcurves(star_list):
        """ This function will create the individual raw light curve files for each star in the specific star list

        :parameter flux_dir - A data frame with the master frame flux data

        :return nothing is returned, but each light curve is output
        """

        # combine the flux from the flux files, and write the raw light curves
        Photometry.combine_flux_files(star_list)

        return
